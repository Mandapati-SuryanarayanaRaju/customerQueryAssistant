{"ast":null,"code":"var _jsxFileName = \"D:\\\\Customer Query Assistant\\\\Customer Query Assistant\\\\client\\\\src\\\\ChatBox.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeWriter = ({\n  text,\n  speed = 20\n}) => {\n  _s();\n  const [displayed, setDisplayed] = useState('');\n  useEffect(() => {\n    setDisplayed('');\n    let i = 0;\n    const interval = setInterval(() => {\n      setDisplayed(prev => prev + text.charAt(i));\n      i++;\n      if (i >= text.length) clearInterval(interval);\n    }, speed);\n    return () => clearInterval(interval);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayed\n  }, void 0, false);\n};\n_s(TypeWriter, \"ZZ8GZ9ia/CtkhrMDRIQydUGkEHE=\");\n_c = TypeWriter;\nconst ChatBox = () => {\n  _s2();\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    // ✅ Check Hugging Face API connection on load\n    const testAPI = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/chat/test');\n        console.log('✅ Hugging Face API Test:', res.data);\n        alert(`AI Connected: ${res.data.output}`);\n      } catch (err) {\n        var _err$response;\n        console.error('❌ Hugging Face API Test Failed:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert('❌ Failed to connect to AI model. Check your Hugging Face API key.');\n      }\n    };\n    testAPI();\n  }, []);\n  const handleSend = async () => {\n    const trimmedInput = input.trim();\n    if (!trimmedInput) return;\n    const userMessage = {\n      sender: 'user',\n      text: trimmedInput\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setTyping(true);\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message: trimmedInput\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: res.data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: '❌ Error: Could not get a response.'\n      }]);\n    } finally {\n      setTyping(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-lg p-6 h-[500px] overflow-y-auto flex flex-col gap-2\",\n      children: [messages.map((msg, index) => {\n        const isLatestBot = msg.sender === 'bot' && index === messages.length - 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-xl max-w-[80%] ${msg.sender === 'user' ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'}`,\n          children: isLatestBot && typing ? /*#__PURE__*/_jsxDEV(TypeWriter, {\n            text: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 40\n          }, this) : msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      }), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500 italic\",\n        children: \"Assistant is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyPress,\n        className: \"flex-1 p-3 border border-gray-300 rounded-l-2xl focus:outline-none\",\n        placeholder: \"Ask me about orders, refunds, or products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"bg-blue-600 text-white px-6 rounded-r-2xl hover:bg-blue-700\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChatBox, \"2eeBh5RWEnuxcfxhs63nArCEZvY=\");\n_c2 = ChatBox;\nexport default ChatBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeWriter\");\n$RefreshReg$(_c2, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","TypeWriter","text","speed","_s","displayed","setDisplayed","i","interval","setInterval","prev","charAt","length","clearInterval","children","_c","ChatBox","_s2","messages","setMessages","typing","setTyping","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","testAPI","res","get","console","log","data","alert","output","err","_err$response","error","response","message","handleSend","trimmedInput","trim","userMessage","sender","token","localStorage","getItem","post","headers","Authorization","botMessage","reply","handleKeyPress","e","key","className","map","msg","index","isLatestBot","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","target","onKeyDown","placeholder","onClick","_c2","$RefreshReg$"],"sources":["D:/Customer Query Assistant/Customer Query Assistant/client/src/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TypeWriter = ({ text, speed = 20 }) => {\r\n  const [displayed, setDisplayed] = useState('');\r\n\r\n  useEffect(() => {\r\n    setDisplayed('');\r\n    let i = 0;\r\n    const interval = setInterval(() => {\r\n      setDisplayed(prev => prev + text.charAt(i));\r\n      i++;\r\n      if (i >= text.length) clearInterval(interval);\r\n    }, speed);\r\n    return () => clearInterval(interval);\r\n  }, [text]);\r\n\r\n  return <>{displayed}</>;\r\n};\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [typing, setTyping] = useState(false);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // ✅ Check Hugging Face API connection on load\r\n    const testAPI = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/chat/test');\r\n        console.log('✅ Hugging Face API Test:', res.data);\r\n        alert(`AI Connected: ${res.data.output}`);\r\n      } catch (err) {\r\n        console.error('❌ Hugging Face API Test Failed:', err.response?.data || err.message);\r\n        alert('❌ Failed to connect to AI model. Check your Hugging Face API key.');\r\n      }\r\n    };\r\n\r\n    testAPI();\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    const trimmedInput = input.trim();\r\n    if (!trimmedInput) return;\r\n\r\n    const userMessage = { sender: 'user', text: trimmedInput };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setTyping(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await axios.post('http://localhost:5000/api/chat', { message: trimmedInput }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const botMessage = { sender: 'bot', text: res.data.reply };\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { sender: 'bot', text: '❌ Error: Could not get a response.' }]);\r\n    } finally {\r\n      setTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-lg p-6 h-[500px] overflow-y-auto flex flex-col gap-2\">\r\n        {messages.map((msg, index) => {\r\n          const isLatestBot = msg.sender === 'bot' && index === messages.length - 1;\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`p-3 rounded-xl max-w-[80%] ${\r\n                msg.sender === 'user'\r\n                  ? 'bg-blue-500 text-white self-end'\r\n                  : 'bg-gray-200 text-black self-start'\r\n              }`}\r\n            >\r\n              {isLatestBot && typing ? <TypeWriter text={msg.text} /> : msg.text}\r\n            </div>\r\n          );\r\n        })}\r\n        {typing && <div className=\"text-sm text-gray-500 italic\">Assistant is typing...</div>}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"flex mt-4\">\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyPress}\r\n          className=\"flex-1 p-3 border border-gray-300 rounded-l-2xl focus:outline-none\"\r\n          placeholder=\"Ask me about orders, refunds, or products...\"\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          className=\"bg-blue-600 text-white px-6 rounded-r-2xl hover:bg-blue-700\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,EAAE,CAAC;IAChB,IAAIC,CAAC,GAAG,CAAC;IACT,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCH,YAAY,CAACI,IAAI,IAAIA,IAAI,GAAGR,IAAI,CAACS,MAAM,CAACJ,CAAC,CAAC,CAAC;MAC3CA,CAAC,EAAE;MACH,IAAIA,CAAC,IAAIL,IAAI,CAACU,MAAM,EAAEC,aAAa,CAACL,QAAQ,CAAC;IAC/C,CAAC,EAAEL,KAAK,CAAC;IACT,OAAO,MAAMU,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA,CAAAF,SAAA;IAAAgB,QAAA,EAAGT;EAAS,gBAAG,CAAC;AACzB,CAAC;AAACD,EAAA,CAfIH,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAiBhB,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM+B,cAAc,GAAG7B,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IAAA,IAAA+B,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEdxB,SAAS,CAAC,MAAM;IACd;IACA,MAAMmC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,qCAAqC,CAAC;QAClEC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,GAAG,CAACI,IAAI,CAAC;QACjDC,KAAK,CAAC,iBAAiBL,GAAG,CAACI,IAAI,CAACE,MAAM,EAAE,CAAC;MAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAC,aAAA;QACZN,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAE,EAAAD,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,uBAAZA,aAAA,CAAcJ,IAAI,KAAIG,GAAG,CAACI,OAAO,CAAC;QACnFN,KAAK,CAAC,mEAAmE,CAAC;MAC5E;IACF,CAAC;IAEDN,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,YAAY,GAAGrB,KAAK,CAACsB,IAAI,CAAC,CAAC;IACjC,IAAI,CAACD,YAAY,EAAE;IAEnB,MAAME,WAAW,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAE5C,IAAI,EAAEyC;IAAa,CAAC;IAC1DxB,WAAW,CAACT,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEmC,WAAW,CAAC,CAAC;IAC3CtB,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,IAAI,CAAC;IAEf,IAAI;MACF,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMnB,GAAG,GAAG,MAAMlC,KAAK,CAACsD,IAAI,CAAC,gCAAgC,EAAE;QAAET,OAAO,EAAEE;MAAa,CAAC,EAAE;QACxFQ,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUL,KAAK;QAChC;MACF,CAAC,CAAC;MACF,MAAMM,UAAU,GAAG;QAAEP,MAAM,EAAE,KAAK;QAAE5C,IAAI,EAAE4B,GAAG,CAACI,IAAI,CAACoB;MAAM,CAAC;MAC1DnC,WAAW,CAACT,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE2C,UAAU,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZlB,WAAW,CAACT,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEoC,MAAM,EAAE,KAAK;QAAE5C,IAAI,EAAE;MAAqC,CAAC,CAAC,CAAC;IAC/F,CAAC,SAAS;MACRmB,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,MAAMkC,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAEf,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,oBACE1C,OAAA;IAAK0D,SAAS,EAAC,uBAAuB;IAAA5C,QAAA,gBACpCd,OAAA;MAAK0D,SAAS,EAAC,kFAAkF;MAAA5C,QAAA,GAC9FI,QAAQ,CAACyC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC5B,MAAMC,WAAW,GAAGF,GAAG,CAACd,MAAM,KAAK,KAAK,IAAIe,KAAK,KAAK3C,QAAQ,CAACN,MAAM,GAAG,CAAC;QACzE,oBACEZ,OAAA;UAEE0D,SAAS,EAAE,8BACTE,GAAG,CAACd,MAAM,KAAK,MAAM,GACjB,iCAAiC,GACjC,mCAAmC,EACtC;UAAAhC,QAAA,EAEFgD,WAAW,IAAI1C,MAAM,gBAAGpB,OAAA,CAACC,UAAU;YAACC,IAAI,EAAE0D,GAAG,CAAC1D;UAAK;YAAA6D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAAGN,GAAG,CAAC1D;QAAI,GAP7D2D,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQP,CAAC;MAEV,CAAC,CAAC,EACD9C,MAAM,iBAAIpB,OAAA;QAAK0D,SAAS,EAAC,8BAA8B;QAAA5C,QAAA,EAAC;MAAsB;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrFlE,OAAA;QAAKmE,GAAG,EAAE3C;MAAe;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENlE,OAAA;MAAK0D,SAAS,EAAC,WAAW;MAAA5C,QAAA,gBACxBd,OAAA;QACEoE,KAAK,EAAE9C,KAAM;QACb+C,QAAQ,EAAGb,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC1CG,SAAS,EAAEhB,cAAe;QAC1BG,SAAS,EAAC,oEAAoE;QAC9Ec,WAAW,EAAC;MAA8C;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACFlE,OAAA;QACEyE,OAAO,EAAE/B,UAAW;QACpBgB,SAAS,EAAC,6DAA6D;QAAA5C,QAAA,EACxE;MAED;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,GAAA,CA9FID,OAAO;AAAA0D,GAAA,GAAP1D,OAAO;AAgGb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAA2D,GAAA;AAAAC,YAAA,CAAA5D,EAAA;AAAA4D,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}