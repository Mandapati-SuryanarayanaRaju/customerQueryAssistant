{"ast":null,"code":"'use strict';\n\nconst PromisePoolConnection = require('./pool_connection');\nconst makeDoneCb = require('./make_done_cb');\nclass PromisePoolNamespace {\n  constructor(poolNamespace, thePromise) {\n    this.poolNamespace = poolNamespace;\n    this.Promise = thePromise || Promise;\n  }\n  getConnection() {\n    const corePoolNamespace = this.poolNamespace;\n    return new this.Promise((resolve, reject) => {\n      corePoolNamespace.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n  query(sql, values) {\n    const corePoolNamespace = this.poolNamespace;\n    const localErr = new Error();\n    if (typeof values === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolNamespace.query(sql, values, done);\n    });\n  }\n  execute(sql, values) {\n    const corePoolNamespace = this.poolNamespace;\n    const localErr = new Error();\n    if (typeof values === 'function') {\n      throw new Error('Callback function is not available with promise clients.');\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolNamespace.execute(sql, values, done);\n    });\n  }\n}\nmodule.exports = PromisePoolNamespace;","map":{"version":3,"names":["PromisePoolConnection","require","makeDoneCb","PromisePoolNamespace","constructor","poolNamespace","thePromise","Promise","getConnection","corePoolNamespace","resolve","reject","err","coreConnection","query","sql","values","localErr","Error","done","execute","module","exports"],"sources":["D:/Customer Query Assistant/Customer Query Assistant/client/node_modules/mysql2/lib/promise/pool_cluster.js"],"sourcesContent":["'use strict';\n\nconst PromisePoolConnection = require('./pool_connection');\nconst makeDoneCb = require('./make_done_cb');\n\nclass PromisePoolNamespace {\n  constructor(poolNamespace, thePromise) {\n    this.poolNamespace = poolNamespace;\n    this.Promise = thePromise || Promise;\n  }\n\n  getConnection() {\n    const corePoolNamespace = this.poolNamespace;\n    return new this.Promise((resolve, reject) => {\n      corePoolNamespace.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, values) {\n    const corePoolNamespace = this.poolNamespace;\n    const localErr = new Error();\n    if (typeof values === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolNamespace.query(sql, values, done);\n    });\n  }\n\n  execute(sql, values) {\n    const corePoolNamespace = this.poolNamespace;\n    const localErr = new Error();\n    if (typeof values === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolNamespace.execute(sql, values, done);\n    });\n  }\n}\n\nmodule.exports = PromisePoolNamespace;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC1D,MAAMC,UAAU,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE5C,MAAME,oBAAoB,CAAC;EACzBC,WAAWA,CAACC,aAAa,EAAEC,UAAU,EAAE;IACrC,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACE,OAAO,GAAGD,UAAU,IAAIC,OAAO;EACtC;EAEAC,aAAaA,CAAA,EAAG;IACd,MAAMC,iBAAiB,GAAG,IAAI,CAACJ,aAAa;IAC5C,OAAO,IAAI,IAAI,CAACE,OAAO,CAAC,CAACG,OAAO,EAAEC,MAAM,KAAK;MAC3CF,iBAAiB,CAACD,aAAa,CAAC,CAACI,GAAG,EAAEC,cAAc,KAAK;QACvD,IAAID,GAAG,EAAE;UACPD,MAAM,CAACC,GAAG,CAAC;QACb,CAAC,MAAM;UACLF,OAAO,CAAC,IAAIV,qBAAqB,CAACa,cAAc,EAAE,IAAI,CAACN,OAAO,CAAC,CAAC;QAClE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAO,KAAKA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACjB,MAAMP,iBAAiB,GAAG,IAAI,CAACJ,aAAa;IAC5C,MAAMY,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC;IAC5B,IAAI,OAAOF,MAAM,KAAK,UAAU,EAAE;MAChC,MAAM,IAAIE,KAAK,CACb,0DACF,CAAC;IACH;IACA,OAAO,IAAI,IAAI,CAACX,OAAO,CAAC,CAACG,OAAO,EAAEC,MAAM,KAAK;MAC3C,MAAMQ,IAAI,GAAGjB,UAAU,CAACQ,OAAO,EAAEC,MAAM,EAAEM,QAAQ,CAAC;MAClDR,iBAAiB,CAACK,KAAK,CAACC,GAAG,EAAEC,MAAM,EAAEG,IAAI,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAC,OAAOA,CAACL,GAAG,EAAEC,MAAM,EAAE;IACnB,MAAMP,iBAAiB,GAAG,IAAI,CAACJ,aAAa;IAC5C,MAAMY,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC;IAC5B,IAAI,OAAOF,MAAM,KAAK,UAAU,EAAE;MAChC,MAAM,IAAIE,KAAK,CACb,0DACF,CAAC;IACH;IACA,OAAO,IAAI,IAAI,CAACX,OAAO,CAAC,CAACG,OAAO,EAAEC,MAAM,KAAK;MAC3C,MAAMQ,IAAI,GAAGjB,UAAU,CAACQ,OAAO,EAAEC,MAAM,EAAEM,QAAQ,CAAC;MAClDR,iBAAiB,CAACW,OAAO,CAACL,GAAG,EAAEC,MAAM,EAAEG,IAAI,CAAC;IAC9C,CAAC,CAAC;EACJ;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGnB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}